name: .Net build and test
description: Build and test all .Net projects in working directory.

inputs:
  configuration:
    description: "The .Net configuration to use for builds and tests, Debug or Release"
    required: true
  use-msbuild:
    description: "Use MSBuild instead of dotnet CLI"
    default: "false"
  platform:
    description: "The platform to use, x86, x64"
    default: "x64"

runs:
  using: "composite"
  steps:
    - name: Build
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        $projects = Get-ChildItem -Recurse | Where-Object { $_.Name -like "*.csproj" -and $_.FullName -notlike "*/Examples/*" }
        if ($projects.Count -eq 0) {
          throw "No *.csproj files found. Did you forget to clone the repository?"
        }
        $projects | ForEach-Object {
          if ("${{ inputs.use-msbuild }}" -eq "true") {
            msbuild /p:Configuration=${{ inputs.configuration }} /p:Platform="${{ inputs.platform }} /m $_.FullName
          } else {
            dotnet build --configuration ${{ inputs.configuration }}  $_.FullName
          }
          if(!$?) { Exit $LASTEXITCODE }
        }

    - name: Test
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        $projects = Get-ChildItem -Recurse | Where-Object { $_.Name -like "*Tests.csproj" -and $_.FullName -notlike "*/Examples/*" }
        if ($projects.Count -eq 0) {
          throw "No *Tests.csproj files found. Did you forget to clone the repository?"
        }
        $projects | ForEach-Object {
          if ("${{ inputs.use-msbuild }}" -eq "true") {
            msbuild /t:VSTest /p:Configuration=${{ inputs.configuration }} /p:Platform="${{ inputs.platform }}" $_.FullName
          } else {
            dotnet test --configuration ${{ inputs.configuration }} --verbosity normal $_.FullName
          }
          if(!$?) { Exit $LASTEXITCODE }
        }
