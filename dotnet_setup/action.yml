name: Setup .Net
description: Clone repository, setup .Net environment, setup private NuGet registry

inputs:
  dotnet-version:
    description: Version of .Net to use
    required: true
  github-packages-username:
    description: Username to authenticate with GitHub Packages
    default: dgellow
    required: false
  github-packages-token:
    description: Token used to authenticate with GitHub Packages
    default: ""
    required: false
  github-packages-feed:
    description: GitHub Packages feed
    default: https://nuget.pkg.github.com/ElboraiSoftware/index.json
    required: false
  github-packages-source-name:
    description: GitHub Packages source name
    default: "Private Elborai Software NuGet feed"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "${{ inputs.dotnet-version }}"

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64

    - name: Configure private NuGet package source
      shell: pwsh
      if: inputs.github-packages-token != ''
      run: |
        dotnet nuget list source --format detailed

        # First try to remove if the source is already added
        $feedUrl = "${{ inputs.github-packages-feed }}"
        $feedUrl = "<YourFeedUrl>"
        $sources = dotnet nuget list source
        $sourceName = ""
        $sources -split "`n" | %{
            write-host $_
            if($_ -match '^\s+\d+\.\s+(.*)\s+\[Enabled\]$'){
                $sourceName = $matches[1]
                write-host "found match for source name: " $sourceName
            } elseif ($_ -match "^\s+$feedUrl$") {
                write-host "found feed, will remove using source name: " $sourceName
                dotnet nuget remove source $sourceName
            }
        }
        dotnet nuget list source --format detailed
        # Then add the source
        dotnet nuget add source "${{ inputs.github-packages-feed }}" --name "${{ inputs.github-packages-source-name }}" --username "${{ inputs.github-packages-username }}" --password "${{ inputs.github-packages-token }}" --store-password-in-clear-text
